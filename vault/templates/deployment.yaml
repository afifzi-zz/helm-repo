apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  {{- template "vault.labels" . }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["{{ .Release.Name }}"]
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
      - name: vault-init
        image: registry.hub.docker.com/sethvargo/vault-init:1.0.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
        volumeMounts:
        - name: google-kms
          mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: GCS_BUCKET_NAME
          value: "{{ .Values.gcs.bucket }}"
        - name: KMS_KEY_ID
          value: "projects/{{ .Values.kms.project }}/locations/{{ .Values.kms.region }}/keyRings/{{ .Values.kms.keyRing }}/cryptoKeys/{{ .Values.kms.cryptoKey }}"
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_SECRET_SHARES
          value: "3"
        - name: VAULT_SECRET_THRESHOLD
          value: "5"
      - name: vault
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["server"]
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
        ports:
        - containerPort: 8200
          name: vault-port
          protocol: TCP
        - containerPort: 8201
          name: cluster-port
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: google-kms
          mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: POD_IP_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: VAULT_LOCAL_CONFIG
          value: |
            api_addr     = "http://{{ .Values.ingress.domainName }}"
            cluster_addr = "http://$(POD_IP_ADDR):8201"
            log_level = "warn"
            ui = true
            seal "gcpckms" {
              project    = "{{ .Values.kms.project }}"
              region     = "{{ .Values.kms.region }}"
              key_ring   = "{{ .Values.kms.keyRing }}"
              crypto_key = "{{ .Values.kms.cryptoKey }}"
            }
            storage "gcs" {
              bucket     = "{{ .Values.gcs.bucket }}"
              ha_enabled = "true"
            }
            listener "tcp" {
              address     = "127.0.0.1:8200"
              tls_disable = "true"
            }
            listener "tcp" {
              address       = "$(POD_IP_ADDR):8200"
              tls_disable   = "true"
            }
        readinessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: google-kms
        secret:
          secretName: kms